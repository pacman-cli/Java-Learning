{"ast":null,"code":"const BASE=\"http://localhost:8080/api/pokemons\";// helper to get headers with JWT\nfunction getAuthHeaders(){const token=localStorage.getItem(\"token\");return{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)};}export async function createPokemon(payload){const res=await fetch(BASE,{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(payload)});if(!res.ok)throw new Error(\"Failed to create Pokémon\");return res.json();}export async function fetchAll(){const token=localStorage.getItem(\"token\");if(!token)throw new Error(\"No token found. Login first.\");const res=await fetch(BASE,{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}});if(!res.ok)throw new Error(\"Failed to fetch Pokémon: \"+res.status);return res.json();}","map":{"version":3,"names":["BASE","getAuthHeaders","token","localStorage","getItem","Authorization","concat","createPokemon","payload","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","fetchAll","status"],"sources":["/Users/puspo/JavaCourse/SpringBoot/pokemon/pokemon-apfrontend/my-app/src/api/pokemonApi.js"],"sourcesContent":["const BASE = \"http://localhost:8080/api/pokemons\";\n\n// helper to get headers with JWT\nfunction getAuthHeaders() {\n  const token = localStorage.getItem(\"token\");\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`,\n  };\n}\n\nexport async function createPokemon(payload) {\n  const res = await fetch(BASE, {\n    method: \"POST\",\n    headers: getAuthHeaders(),\n    body: JSON.stringify(payload),\n  });\n  if (!res.ok) throw new Error(\"Failed to create Pokémon\");\n  return res.json();\n}\n\nexport async function fetchAll() {\n  const token = localStorage.getItem(\"token\");\n  if (!token) throw new Error(\"No token found. Login first.\");\n\n  const res = await fetch(BASE, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!res.ok) throw new Error(\"Failed to fetch Pokémon: \" + res.status);\n  return res.json();\n}\n"],"mappings":"AAAA,KAAM,CAAAA,IAAI,CAAG,oCAAoC,CAEjD;AACA,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,MAAO,CACL,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAAC,MAAA,CAAYJ,KAAK,CAChC,CAAC,CACH,CAEA,MAAO,eAAe,CAAAK,aAAaA,CAACC,OAAO,CAAE,CAC3C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACV,IAAI,CAAE,CAC5BW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAEX,cAAc,CAAC,CAAC,CACzBY,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,OAAO,CAC9B,CAAC,CAAC,CACF,GAAI,CAACC,GAAG,CAACO,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACxD,MAAO,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CACnB,CAEA,MAAO,eAAe,CAAAC,QAAQA,CAAA,CAAG,CAC/B,KAAM,CAAAjB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,KAAM,IAAI,CAAAe,KAAK,CAAC,8BAA8B,CAAC,CAE3D,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACV,IAAI,CAAE,CAC5BW,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCP,aAAa,WAAAC,MAAA,CAAYJ,KAAK,CAChC,CACF,CAAC,CAAC,CAEF,GAAI,CAACO,GAAG,CAACO,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAGR,GAAG,CAACW,MAAM,CAAC,CACtE,MAAO,CAAAX,GAAG,CAACS,IAAI,CAAC,CAAC,CACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}