{"ast":null,"code":"var _jsxFileName = \"/Users/puspo/JavaCourse/SpringBoot/pokemon-apfrontend/my-app/src/components/PokemonCardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchAll } from \"../api/pokemonApi\";\nimport PokemonCard from \"./PokemonCard\";\nimport PokemonFilter from \"./PokemonFilter\";\nimport AddPokemonForm from \"./AddPokemonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonCardList() {\n  _s();\n  const [list, setList] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [type, setType] = useState(\"ALL\");\n  useEffect(() => {\n    fetchAll().then(setList).catch(console.error);\n  }, []);\n  const handleAdded = newPokemon => {\n    setList([...list, newPokemon]); // update state\n  };\n  const filteredList = list.filter(p => {\n    const matchesSearch = p.name.toLowerCase().includes(search.toLowerCase());\n    const matchesType = type === \"ALL\" || p.type === type;\n    return matchesSearch && matchesType;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PokemonFilter, {\n      search: search,\n      setSearch: setSearch,\n      type: type,\n      setType: setType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPokemonForm, {\n      onAdded: handleAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(220px, 1fr))\",\n        gap: \"16px\",\n        padding: \"20px\"\n      },\n      children: filteredList.map(p => /*#__PURE__*/_jsxDEV(PokemonCard, {\n        p: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PokemonCardList, \"BhIgAceFUPJxIyzOy+W+AkRz4V0=\");\n_c = PokemonCardList;\nvar _c;\n$RefreshReg$(_c, \"PokemonCardList\");","map":{"version":3,"names":["React","useEffect","useState","fetchAll","PokemonCard","PokemonFilter","AddPokemonForm","jsxDEV","_jsxDEV","PokemonCardList","_s","list","setList","search","setSearch","type","setType","then","catch","console","error","handleAdded","newPokemon","filteredList","filter","p","matchesSearch","name","toLowerCase","includes","matchesType","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdded","style","display","gridTemplateColumns","gap","padding","map","id","_c","$RefreshReg$"],"sources":["/Users/puspo/JavaCourse/SpringBoot/pokemon-apfrontend/my-app/src/components/PokemonCardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchAll } from \"../api/pokemonApi\";\nimport PokemonCard from \"./PokemonCard\";\nimport PokemonFilter from \"./PokemonFilter\";\nimport AddPokemonForm from \"./AddPokemonForm\";\n\nexport default function PokemonCardList() {\n  const [list, setList] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [type, setType] = useState(\"ALL\");\n\n  useEffect(() => {\n    fetchAll().then(setList).catch(console.error);\n  }, []);\n\n  const handleAdded = (newPokemon) => {\n    setList([...list, newPokemon]); // update state\n  };\n\n  const filteredList = list.filter((p) => {\n    const matchesSearch = p.name.toLowerCase().includes(search.toLowerCase());\n    const matchesType = type === \"ALL\" || p.type === type;\n    return matchesSearch && matchesType;\n  });\n\n  return (\n    <div>\n      <PokemonFilter\n        search={search}\n        setSearch={setSearch}\n        type={type}\n        setType={setType}\n      />\n\n      <AddPokemonForm onAdded={handleAdded} />\n\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(220px, 1fr))\",\n          gap: \"16px\",\n          padding: \"20px\",\n        }}\n      >\n        {filteredList.map((p) => (\n          <PokemonCard key={p.id} p={p} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACdE,QAAQ,CAAC,CAAC,CAACc,IAAI,CAACL,OAAO,CAAC,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIC,UAAU,IAAK;IAClCV,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEW,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAGZ,IAAI,CAACa,MAAM,CAAEC,CAAC,IAAK;IACtC,MAAMC,aAAa,GAAGD,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,MAAM,CAACe,WAAW,CAAC,CAAC,CAAC;IACzE,MAAME,WAAW,GAAGf,IAAI,KAAK,KAAK,IAAIU,CAAC,CAACV,IAAI,KAAKA,IAAI;IACrD,OAAOW,aAAa,IAAII,WAAW;EACrC,CAAC,CAAC;EAEF,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACH,aAAa;MACZQ,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBC,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEF3B,OAAA,CAACF,cAAc;MAAC8B,OAAO,EAAEf;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExC3B,OAAA;MACE6B,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,uCAAuC;QAC5DC,GAAG,EAAE,MAAM;QACXC,OAAO,EAAE;MACX,CAAE;MAAAV,QAAA,EAEDR,YAAY,CAACmB,GAAG,CAAEjB,CAAC,iBAClBjB,OAAA,CAACJ,WAAW;QAAYqB,CAAC,EAAEA;MAAE,GAAXA,CAAC,CAACkB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA5CuBD,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}